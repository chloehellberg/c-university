@{
  Layout = "_Layout";
}

@model University.Models.Course
@Html.ActionLink("Back to courses", "Index", null, null, new { @class="btn btn-info fa fa-pencil-ruler" })
@Html.ActionLink("Edit Course", "Edit", new { id = Model.CourseId }, new { @class="btn btn-info fa fa-edit" })
@Html.ActionLink("Add a Student", "AddStudent", new { id = Model.CourseId }, new { @class="btn btn-info fa fa-plus-circle" })
@Html.ActionLink("Delete Course", "Delete", new { id = Model.CourseId }, new { @class="btn btn-info fa fa-minus-circle" })

<h2>@Html.DisplayFor(model => model.Name)'s Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.Name): @Html.DisplayFor(model => model.Name)</h3>


@if(@Model.Students.Count == 0)
{
  <p>This Course does not belong to any Students</p>
}
else
{
  <h4>Students in @Html.DisplayFor(model => model.Name)</h4>
  <ul>
  @foreach(var join in Model.Students)
  {
    <li>@join.Student.Name
    @using (Html.BeginForm("DeleteStudent", "Courses"))
    {
      @Html.Hidden("joinId", @join.CourseStudentId)
      <input type="submit" value="Delete" class="btn btn-info fa fa-trash-alt"/>
    }
    @using (Html.BeginForm("Completed", "Courses"))
    {
      @if (@join.Completed == false)
      {
        @Html.Hidden("joinId", @join.CourseStudentId)
        <input type="submit" value="Complete" class="btn btn-info fa fa-edit"/>
      }
      else
      {
        <span>Completed</span>
      }      
    }
    </li>
  }
  </ul>
}