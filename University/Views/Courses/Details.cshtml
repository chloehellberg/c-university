@{
  Layout = "_Layout";
}

@model University.Models.Course
@Html.ActionLink(" All Courses", "Index", null, null, new { @class="btn btn-info fa fa-book" })
@Html.ActionLink(" Edit", "Edit", new { id = Model.CourseId }, new { @class="btn btn-info fa fa-edit" })
@Html.ActionLink(" Delete", "Delete", new { id = Model.CourseId }, new { @class="btn btn-info fa fa-minus-circle" })
@Html.ActionLink(" Add Student", "AddStudent", new { id = Model.CourseId }, new { @class="btn btn-info fa fa-plus-circle" })


<h2>@Html.DisplayFor(model => model.Name)'s Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.Name): @Html.DisplayFor(model => model.Name)</h3>


@if(@Model.Students.Count == 0)
{
  <p>This Course does not belong to any Students</p>
}
else
{
  <h4>Students in @Html.DisplayFor(model => model.Name)</h4>
  <ul>
  @foreach(var join in Model.Students)
  {
    <li>@join.Student.Name
    @Html.ActionLink(" Delete", "DeleteStudent", "Courses", new { joinId = @join.CourseStudentId }, new { @class="btn btn-info fa fa-minus-circle" })
    @if (@join.Completed == false)
    {
      @Html.ActionLink(" Complete", "Completed", "Courses", new{ joinId = @join.CourseStudentId}, new { @class="btn btn-info fa fa-edit" })
    }
    else
    {
      <span>Completed</span>
    } 
    </li>
  }
  </ul>
}